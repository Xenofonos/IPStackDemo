// <auto-generated />
using System;
using IPStack.API.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IPStack.API.Migrations
{
    [DbContext(typeof(IPStackContext))]
    [Migration("20231019084755_IPDetailsDBInitialMigration")]
    partial class IPDetailsDBInitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.12");

            modelBuilder.Entity("IPStack.API.Entities.IPDetailsEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("Continent")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "continent_name");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "country_name");

                    b.Property<int?>("IPDetailsEntityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Latitude")
                        .HasColumnType("REAL");

                    b.Property<double>("Longitude")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("IPDetailsEntityId");

                    b.ToTable("IPDetailsSet");
                });

            modelBuilder.Entity("IPStack.API.Entities.IPDetailsEntity", b =>
                {
                    b.HasOne("IPStack.API.Entities.IPDetailsEntity", null)
                        .WithMany("Details")
                        .HasForeignKey("IPDetailsEntityId");
                });

            modelBuilder.Entity("IPStack.API.Entities.IPDetailsEntity", b =>
                {
                    b.Navigation("Details");
                });
#pragma warning restore 612, 618
        }
    }
}
